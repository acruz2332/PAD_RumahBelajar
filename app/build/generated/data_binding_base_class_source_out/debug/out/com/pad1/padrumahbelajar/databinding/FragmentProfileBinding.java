// Generated by view binder compiler. Do not edit!
package com.pad1.padrumahbelajar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.pad1.padrumahbelajar.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final CircleImageView imageView3;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView tv1;

  @NonNull
  public final TextView tv2;

  @NonNull
  public final TextView tvtoken;

  @NonNull
  public final TextView tvusername;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLogout,
      @NonNull CircleImageView imageView3, @NonNull TextView textView11,
      @NonNull TextView textView5, @NonNull TextView tv1, @NonNull TextView tv2,
      @NonNull TextView tvtoken, @NonNull TextView tvusername) {
    this.rootView = rootView;
    this.btnLogout = btnLogout;
    this.imageView3 = imageView3;
    this.textView11 = textView11;
    this.textView5 = textView5;
    this.tv1 = tv1;
    this.tv2 = tv2;
    this.tvtoken = tvtoken;
    this.tvusername = tvusername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_logout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.imageView3;
      CircleImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.tv1;
      TextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      id = R.id.tv2;
      TextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      id = R.id.tvtoken;
      TextView tvtoken = ViewBindings.findChildViewById(rootView, id);
      if (tvtoken == null) {
        break missingId;
      }

      id = R.id.tvusername;
      TextView tvusername = ViewBindings.findChildViewById(rootView, id);
      if (tvusername == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, btnLogout, imageView3,
          textView11, textView5, tv1, tv2, tvtoken, tvusername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
